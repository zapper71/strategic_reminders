name: Strategic Reminders

on:
  schedule:
    # ~6:00 AM America/Toronto. Split for DST vs Standard Time.
    # DST months (Mar–Nov): Toronto ≈ UTC-4  → 10:00 UTC
    - cron: '0 10 * 3-11 *'
    # Standard Time (Dec–Feb): Toronto ≈ UTC-5 → 11:00 UTC
    - cron: '0 11 * 1-2,12 *'
  workflow_dispatch: {}   # allow manual runs

jobs:
  run-reminders:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_FROM: ${{ secrets.TWILIO_FROM }}
      TO_PHONE: ${{ secrets.TO_PHONE }}
      DASHBOARD_LINK: ${{ secrets.DASHBOARD_LINK }}
      HEALTHCHECK_URL: ${{ secrets.HEALTHCHECK_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional healthcheck "start" ping
      - name: Healthcheck start
        if: ${{ env.HEALTHCHECK_URL != '' }}
        run: |
          curl -fsS -m 10 --retry 3 "$HEALTHCHECK_URL/start" || true

      # Always send the simple daily dashboard link
      - name: SMS: Daily dashboard link
        run: |
          python - <<'PY'
          import os
          from twilio.rest import Client
          acc=os.environ["TWILIO_ACCOUNT_SID"]
          tok=os.environ["TWILIO_AUTH_TOKEN"]
          frm=os.environ["TWILIO_FROM"]
          to =os.environ["TO_PHONE"]
          link=os.environ.get("DASHBOARD_LINK","")
          body=f"Daily dashboard. Link: {link}"
          print("Sending:", body)
          sid=Client(acc,tok).messages.create(to=to, from_=frm, body=body).sid
          print("Sent SID:", sid)
          PY

      # Guardrails live inside reminder_sms.py:
      # - Weekly sends only on Sundays
      # - Monthly sends only 2 days before month-end
      # - Quarterly sends only 7 days before quarter-end
      - name: SMS: Weekly reminder (guarded)
        run: python reminder_sms.py weekly

      - name: SMS: Monthly reminder (guarded)
        run: python reminder_sms.py monthly

      - name: SMS: Quarterly reminder (guarded)
        run: python reminder_sms.py quarterly

      # Optional healthcheck success/fail pings
      - name: Healthcheck success
        if: ${{ success() && env.HEALTHCHECK_URL != '' }}
        run: |
          curl -fsS -m 10 --retry 3 "$HEALTHCHECK_URL" || true

      - name: Healthcheck fail
        if: ${{ failure() && env.HEALTHCHECK_URL != '' }}
        run: |
          curl -fsS -m 10 --retry 3 -d "status=fail" "$HEALTHCHECK_URL/fail" || true
